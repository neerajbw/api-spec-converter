# Every Open API file needs
openapi: 3.0.0

# Document metadata
info:
  title: ABT APIs
  description: Open API specification for ABT
  version: "draft"
servers:
  - url: http://api.abt.com/v1
paths:
  /rta/crdnc:
    post:
      description: "This Endpoint is called to process all travel within the PRESTO solution. This includes ePurse and period pass usages and reversals."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceTapCrdnc'
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RtaOutputCrdnc'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /getReversibleTap/crdnc:
    post:
      description: "This Endpoint is called to determine if the virtual card has an eligible reversible transaction."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetReversibleTapInputCrdnc'
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetReversibleTapOutputCrdnc'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /reverseTap/crdnc:
    post:
      description: "This Endpoint is called to reverse the last eligible reversible transaction. This endpoint calls process travel to create a travel event with a negative balance."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReverseTapInputCrdnc'
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReverseTapOutputCrdnc'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /getEodValue:
    post:
      description: "This Endpoint is called to retrieve a list of EOD information"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/GetEodValueInput'
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetEodValueOutput'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        

# The following end points may be redundant at this time
#  /processOfflineTxn:
#    post:
#      description: "This Endpoint is called by devices that come online to send a list of offline transactions to process."
#      requestBody:
#        required: true
#        content:
#          application/json:
#            schema:
#              $ref: '#/components/schemas/ProcessOfflineTransactionInput'
#      responses:
#        200:
#          description: Successful response
#        400:
#          description: Bad Request
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/Error'
#        500:
#          description: Internal Server Error
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/Error'
#  /getEligibleReversalEPurse:
#    post:
#      description: "This Endpoint is called to retrieve eligible ePurse to reverse."
#      requestBody:
#        required: true
#        content:
#          application/json:
#            schema:
#              $ref: '#/components/schemas/GetEligibleReversalEPurseLoadInput'
#      responses:
#        200:
#          description: Successful response
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/GetEligibleReversalEPurseLoadOutput'
#        400:
#          description: Bad Request
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/Error'
#        500:
#          description: Internal Server Error
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/Error'
#  /reverseEPurse:
#    post:
#      description: "This Endpoint is called to reverse ePurse."
#      requestBody:
#        required: true
#        content:
#          application/json:
#            schema:
#              $ref: '#/components/schemas/ReverseEPurseInput'
#      responses:
#        200:
#          description: Successful response
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/ReverseEPurseOutput'
#        400:
#          description: Bad Request
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/Error'
#        500:
#          description: Internal Server Error
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/Error'
#  /getEligibleRefundableProduct:
#    post:
#      description: "This Endpoint is called to retrieve eligible refundable products."
#      requestBody:
#        required: true
#        content:
#          application/json:
#            schema:
#              $ref: '#/components/schemas/GetEligibleRefundableProductInput'
#      responses:
#        200:
#          description: Successful response
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/GetEligibleRefundableProductOutput'
#        400:
#          description: Bad Request
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/Error'
#        500:
#          description: Internal Server Error
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/Error'
#  /refundProduct:
#    post:
#      description: "This Endpoint is called to refund the eligible product."
#      requestBody:
#        required: true
#        content:
#          application/json:
#            schema:
#              $ref: '#/components/schemas/RefundProductInput'
#      responses:
#        200:
#          description: Successful response
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/RefundProductOutput'
#        400:
#          description: Bad Request
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/Error'
#        500:
#          description: Internal Server Error
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/Error'
#  /purchaseCard:
#    post:
#      description: "This Endpoint is called to create a new Virtual Card."
#      requestBody:
#        required: true
#        content:
#          application/json:
#            schema:
#              $ref: '#/components/schemas/PurchaseCardInput'
#      responses:
#        200:
#          description: Successful response
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/PurchaseCardOutput'
#        400:
#          description: Bad Request
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/Error'
#        500:
#          description: Internal Server Error
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/Error'
#  /updateCardConfiguration:
#    post:
#      description: "This Endpoint is called to update different Virtual Card configurations, including: Concession, Language, Default Trip."
#      requestBody:
#        required: true
#        content:
#          application/json:
#            schema:
#              $ref: '#/components/schemas/UpdateCardConfigurationInput'
#      responses:
#        200:
#          description: Successful response
#        400:
#          description: Bad Request
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/Error'
#        500:
#          description: Internal Server Error
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/Error'
#  /hotlist:
#    post:
#      description: "This Endpoint is called to unblock a Virtual Card that has been hotlisted."
#      requestBody:
#        required: true
#        content:
#          application/json:
#            schema:
#              $ref: '#/components/schemas/HotListInput'
#      responses:
#        200:
#          description: Successful response
#        400:
#          description: Bad Request
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/Error'
#        500:
#          description: Internal Server Error
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/Error'
#  /processInspection:
#    post:
#      description: "This Endpoint is called by device to calculate an inspection for a virtual card account and the current travel."
#      requestBody:
#        required: true
#        content:
#          application/json:
#            schema:
#              $ref: '#/components/schemas/ProcessInspectionInput'
#      responses:
#        200:
#          description: Successful response
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/ProcessInspectionOutput'
#        400:
#          description: Bad Request
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/Error'
#        500:
#          description: Internal Server Error
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/Error'
#  /inspectionAction:
#    post:
#      description: "This Endpoint is called by device when an action input is required after a travel is inspected."
#      requestBody:
#        required: true
#        content:
#          application/json:
#            schema:
#              $ref: '#/components/schemas/InspectionActionInput'
#      responses:
#        200:
#          description: Successful response
#        400:
#          description: Bad Request
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/Error'
#        500:
#          description: Internal Server Error
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/Error'
#  /retrieveMediaData:
#    post:
#      description: "This Endpoint is called to retrieve the Virtual Card Media Data based on input parameters."
#      requestBody:
#        required: true
#        content:
#          application/json:
#            schema:
#              $ref: '#/components/schemas/RetrieveMediaDataInput'
#      responses:
#        200:
#          description: Successful response
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/RetrieveMediaDataOutput'
#        400:
#          description: Bad Request
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/Error'
#        500:
#          description: Internal Server Error
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/Error'
#  /updateProduct:
#    post:
#      description: "This Endpoint is called to apply a product to the Virtual Card."
#      requestBody:
#        required: true
#        content:
#          application/json:
#            schema:
#              $ref: '#/components/schemas/UpdateProductInput'
#      responses:
#        200:
#          description: Successful response
#        400:
#          description: Bad Request
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/Error'
#        500:
#          description: Internal Server Error
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/Error'
#  /purchaseProduct:
#    post:
#      description: "This Endpoint is called to purchase a product onto a Virtual Card."
#      requestBody:
#        required: true
#        content:
#          application/json:
#            schema:
#              $ref: '#/components/schemas/PurchaseProductInput'
#      responses:
#        200:
#          description: Successful response
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/PurchaseProductOutput'
#        400:
#          description: Bad Request
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/Error'
#        500:
#          description: Internal Server Error
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/Error'
#  /getDeviceSettings:
#    get:
#      description: "This Endpoint is called to select and return configuration data from memory and construct the data structure to be returned to the caller of this function."
#      responses:
#        200:
#          description: Successful response
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/GetDeviceSettingsOutput'
#        400:
#          description: Bad Request
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/Error'
#        500:
#          description: Internal Server Error
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/Error'
#  /getEligibleProductList:
#    post:
#      description: "This Endpoint is called to retrieve a full list of eligible products or just a short list for a specific service provider to the caller of this function."
#      requestBody:
#        required: true
#        content:
#          application/json:
#            schema:
#              $ref: '#/components/schemas/GetEligibleProductListInput'
#      responses:
#        200:
#          description: Successful response
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/GetEligibleProductListOutput'
#        400:
#          description: Bad Request
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/Error'
#        500:
#          description: Internal Server Error
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/Error'
#  /getServiceProviderConfiguration:
#    post:
#      description: "This Endpoint is called from mobile app for digital ticket use cases."
#      requestBody:
#        required: true
#        content:
#          application/json:
#            schema:
#              $ref: '#/components/schemas/GetServiceProviderConfigurationInput'
#      responses:
#        200:
#          description: Successful response
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/GetServiceProviderConfigurationOutput'
#        400:
#          description: Bad Request
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/Error'
#        500:
#          description: Internal Server Error
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/Error'
#  /getServiceProviderList:
#    get:
#      description: "This Endpoint is called from mobile app for digital ticket use cases."
#      responses:
#        200:
#          description: Successful response
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/GetServiceProviderListOutput'
#        400:
#          description: Bad Request
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/Error'
#        500:
#          description: Internal Server Error
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/Error'
#  /getTransactionHistory:
#    post:
#      description: "This Endpoint is called to retrieve a set of usage transactions for a selected Virtual Card Account."
#      requestBody:
#        required: true
#        content:
#          application/json:
#            schema:
#              $ref: '#/components/schemas/GetTransactionHistoryInput'
#      responses:
#        200:
#          description: Successful response
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/GetTransactionHistoryOutput'
#        400:
#          description: Bad Request
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/Error'
#        500:
#          description: Internal Server Error
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/Error'
#  /activateMedia:
#    post:
#      description: "This Endpoint is called to create a new media record (if needed) and activate it."
#      requestBody:
#        required: true
#        content:
#          application/json:
#            schema:
#              $ref: '#/components/schemas/ActivateMediaInput'
#      responses:
#        200:
#          description: Successful response
#        400:
#          description: Bad Request
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/Error'
#        500:
#          description: Internal Server Error
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/Error'
components:
  schemas:
    UsageStatus:
      type: integer
      enum:
        - 0
        - 1
        - 2 
    UsageType:
      type: integer
      enum: 
        - 0
        - 1
        - 2 
        - 3 
        - 4
    DeviceTapCrdnc:
      type: object
      properties:
        mediaProviderId:
          type: integer
        mediaId:
          type: string
        deviceId:
          type: integer
        deviceLocationId:
          type: integer
          nullable: true
        deviceSupplierId:
          type: integer
        deviceTsn:
          type: integer
        logicalDeviceName:
          type: string
          nullable: true
        serviceProviderId:
          type: integer
        deviceTimestamp:
          type: string
          format: 'date-time'
        locationId:
          type: integer
        routeId:
          type: integer
          nullable: true
        lineId:
          type: integer
          nullable: true
        branchId:
          type: integer
          nullable: true
        transportMode:
          type: integer
          nullable: true
        travelDirection:
          type: integer
          nullable: true
        vehicleId:
          type: integer
          nullable: true
        defaultTripOverride:
          type: boolean
        tripNbr:
          type: integer
          nullable: true
      required:
        - mediaId
        - mediaProviderId
        - deviceId
        - deviceSupplierId
        - deviceTsn
        - serviceProviderId
        - deviceTimestamp
        - locationId
        - defaultTripOverride
    RtaOutputCrdnc:
      type: object
      properties:
        acceptanceStatus:
          $ref: '#/components/schemas/AcceptanceStatus'
        mediaId:
          type: string
        tapType:
          $ref: '#/components/schemas/TapType'
        transactionType:
          type: integer
        concessionType:
          type: integer
        deductedFare:
          type: integer
        tripPrice:
          type: integer        
        transferEndTimeStamp:
          type: string
          format: 'date-time'
        tapOffEndTimeStamp:
          type: string
          format: 'date-time'
          nullable: true
          
        rideBalance:
          type: integer
          nullable: true
        rideNewBalance:
          type: integer
          nullable: true
        epurseBalance:
          type: integer
        epurseNewBalance:
          type: integer
        autoLoad:
          type: boolean
        autoLoadAmount:
          type: integer
          nullable: true
        passProductEndTimestamp:
          type: string
          format: 'date-time'
          nullable: true
        cardLanguage:
          $ref: '#/components/schemas/LanguageCodeType'
      required:
        - acceptanceStatus
        - mediaId
        - tapType
        - transactionType
        - concessionType
        - deductedFare
        - tripPrice
        - transferEndTimeStamp
        - epurseBalance
        - epurseNewBalance
        - autoLoad
        - cardLanguage
    Error:
      type: object
      properties:
        statusCode:
          type: integer
        statusPhrase:
          type: string
        developerMessage:
          type: string
        error:
          type: string
        traceId:
          type: string
          nullable: true
        parentSpanId:
          type: string
          nullable: true
        spanId:
          type: string
          nullable: true
        cause:
          type: object
          additionalProperties:
            type: object
            properties:
              code:
                type: string
              text:
                type: string
          nullable: true
        args:
          type: array
          items: {}
          nullable: true
        details:
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
      required:
        - statusCode
        - statusPhrase
        - developerMessage
        - code
        - error
        - details
    ErrorDetail:
      type: object
      properties:
        error:
          type: string
        args:
          type: array
          items: {}
          nullable: true
        path:
          type: string
      required:
        - error
        - path
    MediaType:
      type: integer
      enum:
        - 0
        - 1
        - 2
        - 3
        - 4
        - 7
        - 255
    AcceptanceStatus:
      type: integer
      enum:
        - 0
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
        - 7
        - 8
        - 9
        - 255
    ReverseTapInputCrdnc:
      type: object
      properties:
        mediaId:
          type: string
        mediaProviderId:
          type: integer
        mediaYearId:
          type: integer
          nullable: true          
        deviceId:
          type: integer
        deviceLocationId:
          type: integer
          nullable: true
        deviceSupplierId:
          type: string
          format: byte
        deviceTsn:
          type: integer
        orphanMode:
          type: boolean
        logicalDeviceName:
          type: string
          nullable: true
        serviceProviderId:
          type: integer
        deviceTimestamp:
          type: string
          format: 'date-time'
        locationId:
          type: integer
        routeId:
          type: integer
          nullable: true
        routeType:
          type: string
          nullable: true
          format: byte
        lineId:
          type: integer
          nullable: true
        branchId:
          type: string
          format: byte
          nullable: true
        transportMode:
          type: string
          format: byte
          nullable: true
        travelDirection:
          type: string
          format: byte
          nullable: true
        vehicleId:
          type: integer
          nullable: true
        defaultTripOverride:
          type: boolean
        tripNbr:
          type: integer
          nullable: true

        directTapUsageUuid:
          type: string
          nullable: true
        spEmployeeId:
          type: integer
          format: int64
          nullable: true          
        salesPeriodSn:
          type: integer
          nullable: true
      required:
        - mediaId
        - mediaProviderId
        - mediaYearId
        - deviceId
        - deviceSupplierId
        - deviceTsn
        - orphanMode
        - serviceProviderId
        - deviceTimestamp
        - locationId
        - defaultTripOverride
    ReverseTapOutputCrdnc:
      type: object
      properties:
        deductedFare:
          type: integer
        acceptanceStatus:
          $ref: '#/components/schemas/AcceptanceStatus'
        mediaId:
          type: string
        ePurseBalance:
          type: integer
        ePurseNewBalance:
          type: integer
      required:
        - deductedFare
        - acceptanceStatus
        - mediaId
        - ePurseBalance
        - ePurseNewBalance
    GetReversibleTapInputCrdnc:
      type: object
      properties:
        mediaId:
          type: string
        serviceProviderId:
          type: integer
        locationId:
          type: integer
        mediaProviderId:
          type: integer
      required:
        - mediaId
        - serviceProviderId
        - locationId
        - mediaProviderId
    GetReversibleTapOutputCrdnc:
      type: object
      properties:
        usages:
          type: array
          items:
            $ref: '#/components/schemas/UsageCrdnc'
        reversibleUsageUuid:
          type: string
        mediaStatusType:
          $ref: '#/components/schemas/MediaStatusType'
        underpaymentAmount: 
          type: integer
        ePurseBalance:
          type: integer
        fareCardValidityEndDate:
          type: string
          format: 'date-time'
        concessionType:
          type: integer
        cardLanguage:
          $ref: '#/components/schemas/LanguageCodeType'
        registrationStatus:
          type: boolean
        thresholdAmount:
          type: integer
        autoloadAmount:
          type: integer
      required:
        - usages
        - reversibleUsageUuid
        - mediaStatusType
        - underpaymentAmount
        - ePurseBalance
        - fareCardValidityEndDate
        - concessionType
        - registrationStatus
        - thresholdAmount
        - autoloadAmount
    Transfer:
      type: object
      properties:
        expirationDate:
          type: string
          format: 'date-time'
          description: "The date/time that the transfer product expires."
        initialJourneyFarePaid:
          type: integer
          description: "The net fare that was paid when the transfer product was created. This corresponds to the DeductedFare of the transaction that created the transfer product."
        timeProfileId:
          type: integer
          description: "The ID of the time profile during which the transfer product was created."
        available:
          type: boolean
        fareIntegrationCredit:
          type: integer
          description: "Positive amount corresponding to Transfer Product credit received for this specific usage."
        fareIntegrationCreditTax1:
          type: integer
          description: "Primary tax on a fare integration credit, specified in cents. (i.e. GST)."
        fareIntegrationCreditTax2:
          type: integer
          description: "Secondary tax on a fare integration credit, specified in cents. (i.e. PST)."
        discountAmount:
          type: integer
          description: "The amount (in cents) of the transfer discount for this e-purse, if any. This is provided for informational purposes only; the DeductedFare already reflects this discount."
        discountTax1:
          type: integer
          description: "The amount (in cents) of the primary tax on the discountAmount."
        discountTax2:
          type: integer
          description: "The amount (in cents) of the secondary tax on the discountAmount."
        routeType:
          type: integer
          description: "Indicates the type of route the transfer is eligible for."
      required:
        - expirationDate
        - initialJourneyFarePaid
        - timeProfileId
        - available
        - fareIntegrationCredit
        - fareIntegrationCreditTax1
        - fareIntegrationCreditTax2
        - discountAmount
        - discountTax1
        - discountTax2
        - routeType
    Loyalty:
      type: object
      properties:
        accumulatedDiscountReceived:
          type: integer
          description: "The accumulated discount received by the customer during this loyalty period, specified in cents."
        accumulatedNbrUsageCounter:
          type: integer
          description: "Cumulative total number of e-Purse fare payment transactions for the Service Provider within a specific period."
        accumulatedValueUsageCounter:
          type: integer
          description: "Cumulative total e-Purse value related to the transactions for a particular Service Provider within a specific period."
        discountEntitlement:
          type: integer
          description: "Positive amount of discount received for this transaction."
        expiryDate:
          type: string
          format: 'date-time'
          description: "The date on which the current loyalty data expires."
      required:
        - accumulatedDiscountReceived
        - accumulatedNbrUsageCounter
        - accumulatedValueUsageCounter
        - discountEntitlement
        - expiryDate
    TapCrdnc:
      type: object
      properties:
        deviceTap:
          $ref: '#/components/schemas/DeviceTapCrdnc'
        tapMode:
          $ref: '#/components/schemas/TapMode'
        tapType:
          $ref: '#/components/schemas/TapType'
      required:
        - deviceTap
        - tapMode
        - tapType
    ReverseTapCrdnc:
      type: object
      properties:
        deviceTap:
          $ref: '#/components/schemas/DeviceTapCrdnc'
        directTapUsageUuid: 
          type: string
          nullable: true
        directTapTime:
          type: string
          format: 'date-time'
        spEmployeeId:
          type: integer
          format: int64
          nullable: true
          description: "Identifies the specific employee within the Service Provider that is utilizing an operations card."
        salesPeriodSn:
          type: integer
          nullable: true
          description: "Sales Period Sequence Number for the Device."
      required:
        - deviceTap
        - directTapTime
    Underpayment:
      type: object
      properties:
        underpaymentAmount:
          type: integer
          description: "The amount (in cents) of the underpayment to charge to e-purse for this transaction."
        underpaymentFee:
          type: integer
          description: "The amount (in cents) of the underpayment fee to charge to e-purse for this transaction."
        underpaymentFeeTax1:
          type: integer
          description: "The amount (in cents) of the primary tax on the underpayment fee to charge to e-purse for this transaction."
        underpaymentFeeTax2:
          type: integer
          description: "The amount (in cents) of the secondary tax on the underpayment fee to charge to e-purse for this transaction."
      required:
        - underpaymentAmount
        - underpaymentFee
        - underpaymentFeeTax1
        - underpaymentFeeTax2
    TapMode:
      type: integer
      enum:
        - 0
        - 1
        - 2
    TapType:
      type: integer
      enum:
        - 0
        - 1
        - 2
        - 3
        - 4
        - 5
    LanguageCodeType:
      type: integer
      enum:
        - 0
        - 1
    TransactionStatusType:
      type: integer
      enum:
        - 0
        - 1
        - 2
        - 3
        - 4
    MediaStatusType:
      type: integer
      enum:
        - 0
        - 1
        - 2
    UsageCrdnc:
      type: object
      properties:
        mediaKey: 
          type: string
        id: 
          type: string
          nullable: true
        _self: 
          type: string
          nullable: true
        createdTime: 
          type: string
          format: 'date-time'
        modifiedTime:
          type: string
          format: 'date-time'
        sourceTopicPartitionOffset:
          type: string
          nullable: true
        uuid:
          type: string
        seqNbr:
          type: integer
          nullable: true
        usageType: 
          $ref: '#/components/schemas/UsageType'
        directTap:
          $ref: '#/components/schemas/TapCrdnc'
        reverseTap: 
          $ref: "#/components/schemas/ReverseTapCrdnc"
        transactionType:
          type: integer
          nullable: true
        offline: 
          type: boolean
          nullable: true
        transferUsage: 
          $ref: "#/components/schemas/Transfer"
          # nullable: true
        loyaltyUsage:
          $ref: "#/components/schemas/Loyalty"
          # nullable: true          
        passUsage: 
          type: integer
          nullable: true
        
        potentialUnderpayment: 
          type: integer
          nullable: true
        underpayment: 
          $ref: "#/components/schemas/Underpayment"
        fareRunningTotal:
          type: integer
          nullable: true
        tripPrice:
          type: integer
          nullable: true
        cashFare:
          type: integer
          nullable: true
        
        deductedFare:
          type: integer
          nullable: true
        
        farePriceTax1:
          type: integer
          nullable: true
        farePriceTax2: 
          type: integer
          nullable: true
        
        previousUsageUuid: 
          type: string
          nullable: true
        lastActionItemSeqNbr:
          type: integer
        sequencedBy: 
          type: string 
          nullable: true
        eventWasGenerated:
          type: boolean
        
        adjustedBy:
          type: string
          nullable: true
        status:
          type: object
          $ref: '#/components/schemas/UsageStatus'
        originalUsageUuid:
          type: string
          nullable: true
      required:
        - mediaKey
        - createTime
        - modifiedTime
        - uuid
        - usageType
        - fareRunningTotal
        - lastActionItemSeqNbr
        - eventWasGenerated
    GetEodValueInput:
      type: object
      properties:
        category:
          type: integer
        key:
          type: integer
        deviceTypeId:
          type: string
        fallbackCategories:
          type: array
          items:
            type: integer
    GetEodValueOutput:
      type: object
      properties:
        category:
          type: integer
        key:
          type: integer
        value:
          type: string
 #The following models may be redundant at this time
#    FareCardRevenueType:
#      type: integer
#      enum:
#        - 0
#        - 1
#    GetEligibleReversalEPurseLoadInput:
#      type: object
#      properties:
#        affiliatedId:
#          type: integer
#          nullable: true
#        serviceProviderId:
#          type: integer
#        deviceId:
#          type: integer
#        deviceSupplierId:
#          type: string
#          format: byte
#        eventDateTime:
#          type: string
#          format: 'date-time'
#        locationId:
#          type: integer
#        operationTsn:
#          type: integer
#        salesPeriodSn:
#          type: integer
#        spEmployeeId:
#          type: integer
#          nullable: true
#        mediaProviderId?:
#          type: integer
#          nullable: true
#        mediaType:
#          $ref: '#/components/schemas/MediaType'
#        mediaId:
#          type: string
#          nullable: true
#      required:
#        - serviceProviderId
#        - deviceId
#        - deviceSupplierId
#        - eventDateTime
#        - locationId
#        - operationTsn
#        - salesPeriodSn
#    GetEligibleReversalEPurseLoadOutput:
#      type: object
#      properties:
#        fareCardBlocked:
#          type: boolean
#        eligibleForReversal:
#          type: boolean
#          nullable: true
#        reversalAmount:
#          type: integer
#          nullable: true
#        eventId:
#          type: integer
#          format: int64
#          nullable: true
#        paymentMeans:
#          type: array
#          nullable: true
#          items:
#            $ref: '#/components/schemas/PaymentMean'
#      required:
#        - fareCardBlocked
#    PaymentMeanType:
#      type: integer
#      enum:
#        - 0
#        - 1
#        - 3
#    CreditPaymentMethodType:
#      type: integer
#      enum:
#        - 2
#        - 4
#        - 5
#        - 6
#        - 7
#        - 8
#        - 9
#        - 10
#        - 11
#        - 12
#    PaymentMean:
#      type: object
#      properties:
#        paymentMeanType:
#          $ref: '#/components/schemas/PaymentMeanType'
#        paymentMethod:
#          $ref: '#/components/schemas/CreditPaymentMethodType'
#        paymentReceived:
#          type: integer
#          nullable: true
#          description: "Positive payment amount received for this specific cash payment method. This could be greater than the payment amount if change is required."
#        paymentAmount:
#          type: integer
#          description: "Signed payment amount for this specific payment method for this transaction."
#        paymentTransactionNbr:
#          type: integer
#          nullable: true
#        paymentTransactionPos:
#          type: integer
#        cashChange:
#          type: integer
#          nullable: true
#          description: "Positive cash change amount provided for the transaction if applicable."
#        changePaymentMean:
#          type: integer
#          nullable: true
#          description: "Method of providing change back to the customer."
#        changeStatus:
#          type: integer
#          nullable: true
#          description: "Change status of the payment if the amount received by the operator is greater than the amount of the operation."
#        currencyId:
#          type: string
#          nullable: true
#          description: "The currency utilized for the transaction for a cash transaction."
#        exchangeRate:
#          type: integer
#          nullable: true
#          description: "Exchange rate for the currency utilized for this transaction to CAN$."
#        acquirerTraceVersionKey:
#          type: integer
#          nullable: true
#          description: "The field describes how to read the Acquirer Trace ID."
#        acquirerTraceId:
#          type: string
#          nullable: true
#          description: "A unique Moneris ID included with the trx so it can be traced in the Central System."
#      required:
#        - paymentMeanType
#        - paymentAmount
#        - paymentTransactionPos
#    ReverseEPurseInput:
#      type: object
#      properties:
#        mediaProviderId:
#          type: integer
#        mediaType:
#          $ref: '#/components/schemas/MediaType'
#        mediaId:
#          type: string
#        deviceId:
#          type: integer
#        deviceSupplierId:
#          type: string
#          format: byte
#        operationTsn:
#          type: integer
#        serviceProviderId:
#          type: integer
#        eventDateTime:
#          type: string
#          format: 'date-time'
#        locationId:
#          type: integer
#        salesPeriodSn:
#          type: integer
#        affiliatedId:
#          type: integer
#          nullable: true
#        spEmployeeId:
#          type: integer
#          nullable: true
#        deviceLocationId:
#          type: integer
#          nullable: true
#        eventId:
#          type: string
#        vehicleId:
#          type: integer
#          nullable: true
#        lineId:
#          type: integer
#          nullable: true
#        deviceTsn:
#          type: integer
#      required:
#        - mediaProviderId
#        - mediaType
#        - mediaId
#        - deviceId
#        - deviceSupplierId
#        - operationTsn
#        - serviceProviderId
#        - eventDateTime
#        - locationId
#        - salesPeriodSn
#        - eventId
#        - deviceTsn
#    ReverseEPurseOutput:
#      type: object
#      properties:
#        fareCardBlocked:
#          type: boolean
#        reversed:
#          type: boolean
#      required:
#        - fareCardBlocked
#        - reversed
#    GetEligibleRefundableProductInput:
#      type: object
#      properties:
#        affiliatedId:
#          type: integer
#          nullable: true
#        serviceProviderId:
#          type: integer
#        deviceId:
#          type: integer
#        deviceSupplierId:
#          type: string
#          format: byte
#        eventDateTime:
#          type: string
#          format: 'date-time'
#        locationId:
#          type: integer
#        operationTsn:
#          type: integer
#        salesPeriodSn:
#          type: integer
#        spEmployeeId:
#          type: integer
#          nullable: true
#        mediaProviderId:
#          type: integer
#          nullable: true
#        mediaType:
#          $ref: '#/components/schemas/MediaType'
#        mediaId:
#          type: string
#          nullable: true
#      required:
#        - serviceProviderId
#        - deviceId
#        - deviceSupplierId
#        - eventDateTime
#        - locationId
#        - operationTsn
#        - salesPeriodSn
#    GetEligibleRefundableProductOutput:
#      type: object
#      properties:
#        fareCardBlocked:
#          type: boolean
#        periodPassRefundableProducts:
#          type: array
#          items:
#            $ref: '#/components/schemas/RefundPassProduct'
#        ePurseRefundableProducts:
#          type: array
#          items:
#            $ref: '#/components/schemas/RefundEPurseProduct'
#      required:
#        - fareCardBlocked
#    RefundEPurseProduct:
#      type: object
#      properties:
#        refundFee:
#          type: integer
#          description: "Positive amount of the refund fee that was applied for the refund."
#        refundAmount:
#          type: integer
#          description: "Positive amount to refund for a E-Purse."
#        totalAmount:
#          type: integer
#          description: "refundFee + refundAmount"
#        ePurseProduct:
#          $ref: '#/components/schemas/EPurse'
#      required:
#        - refundFee
#        - refundAmount
#        - totalAmount
#        - ePurseProduct
#    RefundPassProduct:
#      type: object
#      properties:
#        eventId:
#          type: string
#        refundFee:
#          type: integer
#          description: "Positive amount of the refund fee that was applied for the refund."
#        refundAmount:
#          type: integer
#          description: "Positive amount to refund for a period pass."
#        totalAmount:
#          type: integer
#          description: "refundFee + refundAmount."
#        pass:
#          $ref: '#/components/schemas/Pass'
#      required:
#        - eventId
#        - refundFee
#        - refundAmount
#        - totalAmount
#        - pass
#    PassType:
#      type: integer
#      enum:
#        - 1
#        - 2
#        - 3
#        - 255
#    PeriodPassType:
#      type: integer
#      enum:
#        - 0
#        - 1
#        - 2
#    PurseType:
#      type: integer
#      enum:
#        - 1
#        - 2
#        - 3
#        - 4
#        - 5
#        - 6
#        - 255
#    PassProduct:
#      type: object
#      properties:
#        activationStatus:
#          type: integer
#        instanceId:
#          type: integer
#        productId:
#          type: integer
#        passProductType:
#          $ref: '#/components/schemas/PassType'
#        activationDate:
#          type: string
#          format: 'date-time'
#        expirationDate:
#          type: string
#          format: 'date-time'
#        loadDeviceTsn:
#          type: integer
#        loadTransactionDate:
#          type: string
#          format: 'date-time'
#        productOwnerId:
#          type: integer
#        productCode:
#          $ref: '#/components/schemas/PeriodPassType'
#        usageCount:
#          type: integer
#        awardedRides:
#          type: integer
#        originZone:
#          type: string
#          format: byte
#        zoneRadius:
#          type: string
#          format: byte
#        loadDeviceId:
#          type: integer
#        loadDeviceLocationId:
#          type: integer
#        loadTransactionLocationId:
#          type: integer
#        loadLocationId:
#          type: integer
#        routeType:
#          type: string
#          format: byte
#        rideBalance:
#          type: integer
#      required:
#        - activationStatus
#        - instanceId
#        - productId
#        - passProductType
#        - activationDate
#        - expirationDate
#        - loadDeviceTsn
#        - loadTransactionDate
#        - productOwnerId
#        - productCode
#        - usageCount
#        - awardedRides
#        - originZone
#        - zoneRadius
#        - loadDeviceId
#        - loadDeviceLocationId
#        - loadTransactionLocationId
#        - loadLocationId
#        - routeType
#        - rideBalance
#    EPurse:
#      type: object
#      properties:
#        cumulativePurseLoadAction:
#          type: integer
#          description: "Cumulative purse loads only from action items (i.e. remote E-Purse load, E-Purse load from SPOS)."
#        autoloadEnabled:
#          type: boolean
#          description: "Indicates whether the autoload is enabled for this E-Purse."
#        thresholdAmount:
#          type: integer
#          description: "Threshold amount in cents.  E-Purse will be auto loaded when balance goes less than the threshold amount."
#        autoloadAmount:
#          type: integer
#          description: "Amount (in cents) which needs to be loaded when autoload is triggered."
#        active:
#          type: boolean
#      required:
#        - cumulativePurseLoadAction
#        - autoloadEnabled
#        - thresholdAmount
#        - autoloadAmount
#        - active
#    RefundProductInput:
#      type: object
#      properties:
#        mediaId:
#          type: string
#        mediaProviderId:
#          type: integer
#        mediaType:
#          $ref: '#/components/schemas/MediaType'
#        affiliatedId:
#          type: integer
#          nullable: true
#        deviceId:
#          type: integer
#        deviceSupplierId:
#          type: string
#          format: byte
#        serviceProviderId:
#          type: integer
#        eventDateTime:
#          type: string
#          format: 'date-time'
#        locationId:
#          type: integer
#        operationTsn:
#          type: integer
#          nullable: true
#        salesPeriodSn:
#          type: integer
#          nullable: true
#        spEmployeeId:
#          type: integer
#          format: int64
#          nullable: true
#        deviceLocationId:
#          type: integer
#          nullable: true
#        deviceTsn:
#          type: integer
#        eventId:
#          type: string
#          nullable: true
#        refundFee:
#          type: integer
#        refundAmount:
#          type: integer
#        totalAmount:
#          type: integer
#        passProduct:
#          $ref: '#/components/schemas/PassProduct'
#        ePurseProduct:
#          $ref: '#/components/schemas/EPurse'
#      required:
#        - mediaId
#        - mediaProviderId
#        - mediaType
#        - deviceId
#        - deviceSupplierId
#        - serviceProviderId
#        - eventDateTime
#        - locationId
#        - deviceTsn
#        - refundFee
#        - refundAmount
#        - totalAmount
#    RefundProductOutput:
#      type: object
#      properties:
#        fareCardBlocked:
#          type: boolean
#        refunded:
#          type: boolean
#        refundFee:
#          type: integer
#        refundAmount:
#          type: integer
#        totalAmount:
#          type: integer
#      required:
#        - fareCardBlocked
#        - refunded
#        - refundFee
#        - refundAmount
#        - totalAmount
#    PurchaseCardInput:
#      type: object
#      properties:
#        affiliatedId:
#          type: integer
#          nullable: true
#        sellerServiceProviderId:
#          type: integer
#        deviceId:
#          type: integer
#        deviceSupplierId:
#          type: string
#          format: byte
#        eventDateTime:
#          type: string
#          format: 'date-time'
#        locationId:
#          type: integer
#        operationTsn:
#          type: integer
#        salesPeriodSn:
#          type: integer
#        spEmployeeId:
#          type: integer
#          nullable: true
#        deviceLocationId:
#          type: integer
#          nullable: true
#        deviceTsn:
#          type: integer
#        fareCardRevenueType:
#          $ref: '#/components/schemas/FareCardRevenueType'
#        fareCardValidityEndDate:
#          type: string
#          format: 'date-time'
#        fareCardVersionNumber:
#          type: string
#          format: byte
#        mediaProviderId:
#          type: integer
#          nullable: true
#        mediaType:
#          $ref: '#/components/schemas/MediaType'
#        mediaId:
#          type: string
#          nullable: true
#        transactionStatus:
#          $ref: '#/components/schemas/TransactionStatusType'
#        activateFarecard:
#          type: boolean
#        totalPaymentAmount:
#          type: integer
#        paymentMeans:
#          type: array
#          items:
#            $ref: '#/components/schemas/PaymentMean'
#        defaultODA:
#          type: integer
#          nullable: true
#        defaultODB:
#          type: integer
#          nullable: true
#        classDate:
#          type: string
#          format: 'date-time'
#          nullable: true
#        concessionExpiryDate:
#          type: string
#          format: 'date-time'
#          nullable: true
#        concessionStartDate:
#          type: string
#          format: 'date-time'
#          nullable: true
#        specificClass:
#          type: integer
#          nullable: true
#        universalClass:
#          type: integer
#          nullable: true
#        languageCode:
#          $ref: '#/components/schemas/LanguageCodeType'
#        productPurchased:
#          type: array
#          items:
#            anyOf:
#              - $ref: '#/components/schemas/PeriodPass'
#              - $ref: '#/components/schemas/SelectedEPurse'
#              - $ref: '#/components/schemas/FareMedia'
#            discriminator:
#              propertyName: productFamily
#              mapping:
#                PERIODPASS: '#/components/schemas/PeriodPass'
#                EPURSE: '#/components/schemas/SelectedEPurse'
#                FAREMEDIA: '#/components/schemas/FareMedia'
#      required:
#        - sellerServiceProviderId
#        - deviceId
#        - deviceSupplierId
#        - eventDateTime
#        - locationId
#        - operationTsn
#        - salesPeriodSn
#        - deviceTsn
#        - fareCardRevenueType
#        - fareCardValidityEndDate
#        - fareCardVersionNumber
#        - mediaType
#        - transactionStatus
#        - activateFarecard
#        - totalPaymentAmount
#        - productPurchased
#    PurchaseCardOutput:
#      type: object
#      properties:
#        mediaId:
#          type: string
#          nullable: true
#        loadedProducts:
#          type: array
#          nullable: true
#          items:
#            anyOf:
#              - $ref: '#/components/schemas/PeriodPass'
#              - $ref: '#/components/schemas/SelectedEPurse'
#              - $ref: '#/components/schemas/FareMedia'
#            discriminator:
#              propertyName: productFamily
#              mapping:
#                PERIODPASS: '#/components/schemas/PeriodPass'
#                EPURSE: '#/components/schemas/SelectedEPurse'
#                FAREMEDIA: '#/components/schemas/FareMedia'
#        notLoadedProducts:
#          type: array
#          nullable: true
#          items:
#            anyOf:
#              - $ref: '#/components/schemas/PeriodPass'
#              - $ref: '#/components/schemas/SelectedEPurse'
#              - $ref: '#/components/schemas/FareMedia'
#            discriminator:
#              propertyName: productFamily
#              mapping:
#                PERIODPASS: '#/components/schemas/PeriodPass'
#                EPURSE: '#/components/schemas/SelectedEPurse'
#                FAREMEDIA: '#/components/schemas/FareMedia'
#        paymentMeans:
#          type: array
#          nullable: true
#          items:
#            $ref: '#/components/schemas/PaymentMean'
#    SelectedEPurse:
#      type: object
#      allOf:
#        - $ref: '#/components/schemas/Product'
#      properties:
#        loadValue:
#          type: integer
#          format: int64
#          nullable: true
#          description: "Amount that was loaded to the E-Purse."
#    UpdateCardConfigurationInput:
#      type: object
#      properties:
#        deviceId:
#          type: integer
#        deviceSupplierId:
#          type: string
#          format: byte
#        locationId:
#          type: integer
#        salesPeriodSn:
#          type: integer
#        serviceProviderId:
#          type: integer
#        eventDateTime:
#          type: string
#          format: 'date-time'
#        operationTsn:
#          type: integer
#        affiliatedId:
#          type: integer
#          nullable: true
#        transactionStatus:
#          $ref: '#/components/schemas/TransactionStatusType'
#        deviceLocationId:
#          type: integer
#          nullable: true
#        deviceTsn:
#          type: integer
#        mediaProviderId:
#          type: integer
#          nullable: true
#        mediaType:
#          $ref: '#/components/schemas/MediaType'
#        mediaId:
#          type: string
#          nullable: true
#        languageCode:
#          $ref: '#/components/schemas/LanguageCodeType'
#        classDate:
#          type: string
#          format: 'date-time'
#          nullable: true
#        specificClass:
#          $ref: '#/components/schemas/Concession'
#        universalClass:
#          $ref: '#/components/schemas/Concession'
#        defaultODA:
#          type: integer
#          nullable: true
#        defaultODB:
#          type: integer
#          nullable: true
#      required:
#        - deviceId
#        - deviceSupplierId
#        - locationId
#        - salesPeriodSn
#        - serviceProviderId
#        - eventDateTime
#        - operationTsn
#        - transactionStatus
#        - deviceTsn
#    Concession:
#      type: object
#      properties:
#        id:
#          type: integer
#          description: "The unique ID of the concession."
#        activationDate:
#          type: string
#          format: 'date-time'
#          description: "The date on which the concession becomes available for use."
#        expirationDate:
#          type: string
#          format: 'date-time'
#          description: "The date on which the concession expires."
#      required:
#        - id
#        - activationDate
#        - expirationDate
#    HotListInput:
#      type: object
#      properties:
#        cardUnblockingReason:
#          $ref: '#/components/schemas/UnblockingReasonType'
#        mediaProviderId:
#          type: integer
#        mediaType:
#          $ref: '#/components/schemas/MediaType'
#        mediaId:
#          type: string
#        listManagerId:
#          type: integer
#        deviceId:
#          type: integer
#        deviceLocationId:
#          type: integer
#          nullable: true
#        deviceSupplierId:
#          type: string
#          format: byte
#        eodVersionNo:
#          type: integer
#        locationId:
#          type: integer
#        serviceProviderId:
#          type: integer
#        transactionStatus:
#          $ref: '#/components/schemas/TransactionStatusType'
#        operationTSN:
#          type: integer
#        deviceTsn:
#          type: integer
#      required:
#        - mediaProviderId
#        - mediaType
#        - mediaId
#        - listManagerId
#        - deviceId
#        - deviceSupplierId
#        - eodVersionNo
#        - locationId
#        - serviceProviderId
#        - transactionStatus
#        - operationTsn
#    ProcessInspectionInput:
#      type: object
#      properties:
#        mediaId:
#          type: string
#        mediaType:
#          $ref: '#/components/schemas/MediaType'
#        mediaProviderId:
#          type: integer
#        deviceId:
#          type: integer
#        deviceSupplierId:
#          type: string
#          format: byte
#        deviceLocationId:
#          type: integer
#          nullable: true
#        deviceTsn:
#          type: integer
#        subSystemId:
#          type: string
#          nullable: true
#        salesPeriodSn:
#          type: integer
#        spEmployeeId:
#          type: integer
#          format: int64
#          nullable: true
#        eventDateTime:
#          type: string
#          format: 'date-time'
#        logicalDeviceName:
#          type: string
#          nullable: true
#        serviceProviderId:
#          type: integer
#        routeId:
#          type: integer
#          nullable: true
#        routeType:
#          type: string
#          format: byte
#          nullable: true
#        lineId:
#          type: integer
#          nullable: true
#        branchId:
#          type: string
#          format: byte
#          nullable: true
#        vehicleId:
#          type: integer
#          nullable: true
#        operationTsn:
#          type: integer
#          nullable: true
#        tripNumber:
#          type: integer
#          nullable: true
#        travelOriginZone:
#          type: string
#          format: byte
#          nullable: true
#        travelDestinationZone:
#          type: string
#          format: byte
#          nullable: true
#        travelZoneRadius:
#          type: string
#          format: byte
#          nullable: true
#      required:
#        - mediaId
#        - mediaType
#        - mediaProviderId
#        - deviceId
#        - deviceSupplierId
#        - deviceTsn
#        - salesPeriodSn
#        - eventDateTime
#        - serviceProviderId
#    InspectionResultType:
#      type: integer
#      enum:
#        - 0
#        - 1
#        - 2
#        - 3
#    ProcessInspectionOutput:
#      type: object
#      properties:
#        inspectionResult:
#          $ref: '#/components/schemas/InspectionResultType'
#        mediaStatus:
#          $ref: '#/components/schemas/MediaStatusType'
#        universalClass:
#          type: integer
#        specificClass:
#          type: integer
#          nullable: true
#      required:
#        - inspectionResult
#        - mediaStatus
#        - universalClass
#    InspectionActionInput:
#      type: object
#      properties:
#        mediaId:
#          type: string
#        mediaType:
#          $ref: '#/components/schemas/MediaType'
#        mediaProviderId:
#          type: integer
#        deviceId:
#          type: integer
#        deviceSupplierId:
#          type: string
#          format: byte
#        deviceLocationId:
#          type: integer
#          nullable: true
#        deviceTsn:
#          type: integer
#        subsystemId:
#          type: string
#          nullable: true
#        salesPeriodSn:
#          type: integer
#        spEmployeeId:
#          type: integer
#          format: int64
#          nullable: true
#        eventDateTime:
#          type: string
#          format: 'date-time'
#        logicalDeviceName:
#          type: string
#          nullable: true
#        serviceProviderId:
#          type: integer
#        routeId:
#          type: integer
#          nullable: true
#        routeType:
#          type: string
#          format: byte
#          nullable: true
#        lineId:
#          type: integer
#          nullable: true
#        branchId:
#          type: string
#          format: byte
#          nullable: true
#        vehicleId:
#          type: integer
#          nullable: true
#        operationTsn:
#          type: integer
#          nullable: true
#        tripNumber:
#          type: integer
#          nullable: true
#        travelOriginZone:
#          type: string
#          format: byte
#          nullable: true
#        travelDestinationZone:
#          type: string
#          format: byte
#          nullable: true
#        travelZoneRadius:
#          type: string
#          format: byte
#          nullable: true
#        inspectionAction:
#          type: string
#          format: byte
#        inspectionResult:
#          $ref: '#/components/schemas/InspectionResultType'
#      required:
#        - mediaId
#        - mediaType
#        - mediaProviderId
#        - deviceId
#        - deviceSupplierId
#        - deviceTsn
#        - salesPeriodSn
#        - eventDateTime
#        - serviceProviderId
#        - inspectionAction
#        - inspectionResult
#    TransactionRevenueType:
#      type: integer
#      enum:
#        - 0
#        - 1
#        - 2
#    VirtualCardMain:
#      type: object
#      properties:
#        timestamp:
#          type: string
#          format: 'date-time'
#          description: "Represents the timestamp of when the last record was written to the database."
#        mediaProviderId:
#          type: integer
#          description: "A unique identifier for the provider of the media. For contactless cards, this is typically some unique identifier for the manufacturer of the media."
#        mediaType:
#          $ref: '#/components/schemas/MediaType'
#        mediaId:
#          type: string
#          description: "The unique identifier for the fare media. Typically, this will be a unique hash for bank cards, a chip serial number for credential contactless of media."
#        discriminator:
#          type: string
#          description: "Indicates what the record (domain) is. VirtualCardMain will have the value as “VirtualCardMain”."
#        region:
#          type: string
#          description: "A region in which the record is created."
#        sortNbr:
#          type: integer
#        lastActionItemEffectiveTime:
#          type: string
#          format: 'date-time'
#          description: "The most recent timestamp of the action items that have been reflected on this record."
#        recentActionItemCount:
#          type: integer
#        lastSnapshotTime:
#          type: string
#          format: 'date-time'
#          nullable: true
#        mediaStatus:
#          $ref: '#/components/schemas/MediaStatusType'
#        fareCard:
#          $ref: '#/components/schemas/FareCard'
#        cardHolderProfile:
#          $ref: '#/components/schemas/CardHolderProfile'
#        purse:
#          $ref: '#/components/schemas/EPurse'
#        serviceProviderProfiles:
#          type: object
#          additionalProperties:
#            type: object
#            properties:
#              serviceProviderId:
#                type: integer
#              serviceProviderProfile:
#                $ref: '#/components/schemas/ServiceProviderProfile'
#        lastActionItemSortNbrs:
#          type: object
#          additionalProperties:
#            type: object
#            properties:
#              regionId:
#                type: string
#              lastSortNo:
#                type: integer
#        mediaKey:
#          type: string
#          description: "Set of fields that uniquely identify the media, including media ID, media type, etc."
#      required:
#        - timestamp
#        - mediaProviderId
#        - mediaType
#        - mediaId
#        - discriminator
#        - region
#        - sortNbr
#        - lastActionItemSortNbrs
#        - lastActionItemEffectiveTime
#        - recentActionItemCount
#        - lastSnapshotTime
#        - mediaStatus
#        - cardHolderProfile
#        - purse
#        - serviceProviderProfiles
#        - mediaKey
#    CardHolderProfile:
#      type: object
#      properties:
#        universalClass:
#          $ref: '#/components/schemas/Concession'
#        customerBirthDate:
#          type: string
#          format: 'date-time'
#          nullable: true
#          description: "The customer’s birthdate. Some concessions have age restrictions, and this field is used to calculate the customer’s age when validating those concessions."
#        fareCardRegistrationStatus:
#          $ref: '#/components/schemas/FareCardRegistrationStatusType'
#        languageCode:
#          $ref: '#/components/schemas/LanguageCodeType'
#      required:
#        - universalClass
#        - fareCardRegistrationStatus
#        - languageCode
#    ServiceProviderProfile:
#      type: object
#      properties:
#        id:
#          type: integer
#          description: "SP Block Owner ID."
#        inUnderpayment:
#          type: boolean
#          description: "Indicates whether the customer is currently in underpayment (i.e. they failed to tap-off within the maximum trip duration window)."
#        passes:
#          type: array
#          items:
#            $ref: '#/components/schemas/Pass'
#        specificConcession:
#          $ref: '#/components/schemas/Concession'
#        underpaymentValue:
#          type: integer
#          description: "The amount by which the customer has fallen into underpayment."
#        loyalty:
#          $ref: "#/components/schemas/Loyalty"
#        defaultTrip:
#          $ref: '#/components/schemas/DefaultTrip'
#        dailyCapCounter:
#          type: integer
#          description: "The total amount (in cents) of all the fares paid that has counted towards the daily cap."
#        fareCardBlockExpiryDate:
#          type: string
#          format: 'date-time'
#          description: "Expiry date of the current Service Provider Block on the farecard for this ServiceProviderID."
#      required:
#        - id
#        - inUnderpayment
#        - passes
#        - specificConcession
#        - underpaymentValue
#        - loyaltyInfo
#        - defaultTrip
#        - dailyCapCounter
#        - fareCardBlockExpiryDate
#    DefaultTrip:
#      type: object
#      properties:
#        fromLocationId:
#          type: integer
#          description: "From location ID."
#        toLocationId:
#          type: integer
#          description: "To location ID."
#        active:
#          type: boolean
#          description: "Indicates if the default trip is set by user."
#      required:
#        - fromLocationId
#        - toLocationId
#        - active
#    PassProductActivationStatusType:
#      type: integer
#      enum:
#        - 0
#        - 1
#        - 2
#    RetrieveMediaRequestType:
#      type: integer
#      enum:
#        - 1
#        - 2
#        - 3
#        - 4
#        - 5
#        - 6
#        - 7
#        - 8
#    ActionType:
#      type: integer
#      enum:
#        - 1
#        - 2
#        - 3
#        - 4
#        - 10
#    HolderRegistrationType:
#      type: integer
#      enum:
#        - 0
#        - 1
#        - 2
#    InspectionActionType:
#      type: integer
#      enum:
#        - 0
#        - 1
#        - 2
#        - 3
#        - 4
#        - 5
#        - 6
#    RetrieveMediaDataInput:
#      type: object
#      properties:
#        mediaId:
#          type: string
#        mediaProviderId:
#          type: integer
#          nullable: true
#        mediaType:
#          $ref: '#/components/schemas/MediaType'
#        retrieveMediaRequestType:
#          type: array
#          items:
#            $ref: '#/components/schemas/RetrieveMediaRequestType'
#      required:
#        - mediaId
#        - mediaType
#        - retrieveMediaRequestType
#    RetrieveMediaDataOutput:
#      type: object
#      properties:
#        virtualCard:
#          $ref: '#/components/schemas/VirtualCardMain'
#      required:
#        - virtualCard
#    UpdateProductInput:
#      type: object
#      properties:
#        mediaId:
#          type: string
#        mediaProviderId:
#          type: integer
#        mediaType:
#          $ref: '#/components/schemas/MediaType'
#        affiliatedId:
#          type: integer
#          nullable: true
#        deviceId:
#          type: integer
#        deviceSupplierId:
#          type: string
#          format: byte
#        serviceProviderId:
#          type: integer
#        eventDateTime:
#          type: string
#          format: 'date-time'
#        deviceLocationId:
#          type: integer
#        operationTsn:
#          type: integer
#          nullable: true
#        salesPeriodSn:
#          type: integer
#          nullable: true
#        spEmployeeId:
#          type: integer
#          format: int64
#          nullable: true
#        transactionStatus:
#          $ref: '#/components/schemas/TransactionStatusType'
#        totalPaymentAmount:
#          type: integer
#        paymentMeans:
#          type: array
#          items:
#            $ref: '#/components/schemas/PaymentMean'
#          nullable: true
#        products:
#          type: array
#          items:
#            anyOf:
#              - $ref: '#/components/schemas/PeriodPass'
#              - $ref: '#/components/schemas/SelectedEPurse'
#              - $ref: '#/components/schemas/FareMedia'
#            discriminator:
#              propertyName: productFamily
#              mapping:
#                PERIODPASS: '#/components/schemas/PeriodPass'
#                EPURSE: '#/components/schemas/SelectedEPurse'
#                FAREMEDIA: '#/components/schemas/FareMedia'
#      required:
#        - mediaId
#        - mediaProviderId
#        - mediaType
#        - deviceId
#        - deviceSupplierId
#        - serviceProviderId
#        - eventDateTime
#        - deviceLocationId
#        - transactionStatus
#        - totalPaymentAmount
#        - Products
#    PurchaseProductInput:
#      type: object
#      properties:
#        mediaId:
#          type: string
#        mediaProviderId:
#          type: integer
#          nullable: true
#        mediaType:
#          $ref: '#/components/schemas/MediaType'
#        affiliatedId:
#          type: integer
#          nullable: true
#        deviceId:
#          type: integer
#        deviceSupplierId:
#          type: string
#          format: byte
#        sellerServiceProviderId:
#          type: integer
#        eventDateTime:
#          type: string
#          format: 'date-time'
#        deviceLocationId:
#          type: integer
#        operationTsn:
#          type: integer
#        salesPeriodSn:
#          type: integer
#        spEmployeeId:
#          type: integer
#          format: int64
#          nullable: true
#        deviceTsn:
#          type: integer
#        transactionStatus:
#          $ref: '#/components/schemas/TransactionStatusType'
#        totalPaymentAmount:
#          type: integer
#        paymentMeans:
#          type: array
#          items:
#            $ref: '#/components/schemas/PaymentMean'
#          nullable: true
#        products:
#          type: array
#          items:
#            anyOf:
#              - $ref: '#/components/schemas/PeriodPass'
#              - $ref: '#/components/schemas/SelectedEPurse'
#              - $ref: '#/components/schemas/FareMedia'
#            discriminator:
#              propertyName: productFamily
#              mapping:
#                PERIODPASS: '#/components/schemas/PeriodPass'
#                EPURSE: '#/components/schemas/SelectedEPurse'
#                FAREMEDIA: '#/components/schemas/FareMedia'
#      required:
#        - mediaId
#        - mediaType
#        - deviceId
#        - deviceSupplierId
#        - sellerServiceProviderId
#        - eventDateTime
#        - deviceLocationId
#        - operationTsn
#        - salesPeriodSn
#        - deviceTsn
#        - transactionStatus
#        - totalPaymentAmount
#        - Products
#    PurchaseProductOutput:
#      type: object
#      properties:
#        fareCardBlocked:
#          type: boolean
#        loadedProducts:
#          type: array
#          nullable: true
#          items:
#            anyOf:
#              - $ref: '#/components/schemas/PeriodPass'
#              - $ref: '#/components/schemas/SelectedEPurse'
#              - $ref: '#/components/schemas/FareMedia'
#            discriminator:
#              propertyName: productFamily
#              mapping:
#                PERIODPASS: '#/components/schemas/PeriodPass'
#                EPURSE: '#/components/schemas/SelectedEPurse'
#                FAREMEDIA: '#/components/schemas/FareMedia'
#        notLoadedProducts:
#          type: array
#          nullable: true
#          items:
#            anyOf:
#              - $ref: '#/components/schemas/PeriodPass'
#              - $ref: '#/components/schemas/SelectedEPurse'
#              - $ref: '#/components/schemas/FareMedia'
#            discriminator:
#              propertyName: productFamily
#              mapping:
#                PERIODPASS: '#/components/schemas/PeriodPass'
#                EPURSE: '#/components/schemas/SelectedEPurse'
#                FAREMEDIA: '#/components/schemas/FareMedia'
#        paymentMeans:
#          type: array
#          items:
#            $ref: '#/components/schemas/PaymentMean'
#          nullable: true
#        mediaId:
#          type: string
#          nullable: true
#      required:
#        -  fareCardBlocked
#    Label:
#      type: object
#      properties:
#        fullName:
#          type: string
#        shortName:
#          type: string
#          nullable: true
#        abbreviation:
#          type: string
#          nullable: true
#        language:
#          type: string
#      required:
#        - fullName
#        - language
#    Language:
#      type: object
#      properties:
#        languageId:
#          type: integer
#        languageName:
#          type: string
#      required:
#        - languageId
#        - languageName
#    UnblockingReason:
#      type: object
#      properties:
#        unblockingReasonId:
#          type: integer
#        unblockingReasonLabel:
#          type: array
#          items:
#            $ref: '#/components/schemas/Label'
#      required:
#        - unblockingReasonId
#        - unblockingReasonLabel
#    RefundReason:
#      type: object
#      properties:
#        refundReasonId:
#          type: integer
#        refundReasonLabel:
#          type: array
#          items:
#            $ref: '#/components/schemas/Label'
#      required:
#        - refundReasonId
#        - refundReasonLabel
#    RefundFee:
#      type: object
#      properties:
#        refundType:
#          $ref: '#/components/schemas/RefundType'
#        refundFeeType:
#          $ref: '#/components/schemas/RefundFeeType'
#        refundFeeLabel:
#          type: array
#          nullable: true
#          items:
#            $ref: '#/components/schemas/Label'
#        refundFee:
#          type: integer
#        maximumRefundLabel:
#          type: array
#          nullable: true
#          items:
#            $ref: '#/components/schemas/Label'
#        maximumRefundAmount:
#          type: integer
#      required:
#        - refundType
#        - refundFeeType
#        - refundFee
#        - maximumRefundAmount
#    RefundType:
#      type: integer
#      enum:
#        - 1
#        - 2
#        - 3
#        - 4
#    RefundFeeType:
#      type: integer
#      enum:
#        - 0
#        - 1
#    NonFarecardProductType:
#      type: integer
#      enum:
#        - 1
#        - 2
#        - 3
#        - 4
#        - 5
#        - 6
#        - 7
#        - 8
#    DeviceType:
#      type: integer
#      enum:
#        - 1
#        - 2
#        - 4
#        - 8
#        - 16
#        - 21
#        - 32
#        - 64
#        - 128
#        - 129
#        - 130
#        - 131
#        - 132
#        - 133
#        - 134
#    FareType:
#      type: integer
#      enum:
#        - 1
#        - 2
#        - 3
#    DeviceSettings:
#      type: object
#      properties:
#        deviceSettingType:
#          $ref: '#/components/schemas/DeviceSettingType'
#        language:
#          type: array
#          nullable: true
#          items:
#            $ref: '#/components/schemas/Language'
#        unblockingReason:
#          type: array
#          nullable: true
#          items:
#            $ref: '#/components/schemas/UnblockingReason'
#        refundReason:
#          type: array
#          nullable: true
#          items:
#            $ref: '#/components/schemas/RefundReason'
#        refundFee:
#          type: array
#          nullable: true
#          items:
#            $ref: '#/components/schemas/RefundFee'
#      required:
#        - deviceSettingType
#    DeviceSettingType:
#      type: integer
#      enum:
#        - 0
#        - 1
#        - 2
#        - 3
#    EligibleProduct:
#      type: object
#      properties:
#        productId:
#          type: integer
#        productName:
#          type: array
#          items:
#            $ref: '#/components/schemas/Label'
#        productPrice:
#          type: number
#          format: double
#        productServiceProvider:
#          $ref: '#/components/schemas/ServiceProvider'
#        productFamily:
#          type: string
#      required:
#        - productId
#        - productName
#        - productPrice
#        - productServiceProvider
#        - productFamily
#    EligiblePeriodPass:
#      type: object
#      allOf:
#        - $ref: '#/components/schemas/EligibleProduct'
#      properties:
#        startDate:
#          type: string
#          format: 'date-time'
#        endDate:
#          type: string
#          format: 'date-time'
#        productConcession:
#          $ref: '#/components/schemas/Concession'
#        calendarLimits:
#          $ref: '#/components/schemas/CalendarLimit'
#      required:
#        - startDate
#        - endDate
#        - productConcession
#        - calendarLimits
#    EligibleEPurse:
#      type: object
#      allOf:
#        - $ref: '#/components/schemas/EligibleProduct'
#      properties:
#        maxAmount:
#          type: number
#          format: double
#        minAmount:
#          type: number
#          format: double
#      required:
#        - maxAmount
#        - minAmount
#    EligibleFareMedia:
#      type: object
#      allOf:
#        - $ref: '#/components/schemas/EligibleProduct'
#    ServiceProviderConfiguration:
#      type: object
#      properties:
#        serviceProviderId:
#          type: integer
#        serviceProviderTopology:
#          $ref: '#/components/schemas/ServiceProviderTopology'
#        fareMatrixList:
#          type: array
#          items:
#            $ref: '#/components/schemas/FareMatrix'
#          nullable: true
#        concessions:
#          type: array
#          items:
#            $ref: '#/components/schemas/Concession'
#        nonFareCardProduct:
#          type: array
#          nullable: true
#          items:
#            $ref: '#/components/schemas/NonFareCardProduct'
#        ePurseProduct:
#          type: array
#          nullable: true
#          items:
#            $ref: '#/components/schemas/EPurse'
#        periodPassProduct:
#          type: array
#          nullable: true
#          items:
#            $ref: '#/components/schemas/PeriodPass'
#        fareMediaProduct:
#          type: array
#          nullable: true
#          items:
#            $ref: '#/components/schemas/FareMedia'
#      required:
#        - serviceProviderId
#    Product:
#      type: object
#      properties:
#        productId:
#          type: integer
#          description: "Product ID."
#        productPrice:
#          type: number
#          format: double
#          description: "Price of the selected product."
#        productServiceProviderId:
#          type: integer
#          description: "The ID of the service provider who owns (sold) the product."
#        productFamily:
#          type: string
#      required:
#        - productId
#        - productPrice
#        - productServiceProviderId
#        - productFamily
#    CalendarLimit:
#      type: integer
#      enum:
#        - 0
#        - 1
#    FareMedia:
#      type: object
#      allOf:
#        - $ref: '#/components/schemas/Product'
#      properties:
#        languageCode:
#          $ref: '#/components/schemas/LanguageCodeType'
#        defaultODA:
#          type: integer
#          nullable: true
#          description: "Location ID of the first station utilized for the Cardholder’s default origin/destination trip."
#        defaultODB:
#          type: integer
#          nullable: true
#          description: "Location ID of the second station utilized for the Cardholder’s default origin/destination trip."
#    PeriodPass:
#      type: object
#      allOf:
#        - $ref: '#/components/schemas/Product'
#      properties:
#        startDate:
#          type: string
#          format: 'date-time'
#          description: "Start validity date of the period pass product."
#        endDate:
#          type: string
#          format: 'date-time'
#          description: "End validity date of the period pass product."
#        calendarLimits:
#          type: integer
#          description: "Length of the pass. Passes are configured as Calendar Aligned and can be either daily, weekly, monthly, or yearly."
#      required:
#        - startDate
#        - endDate
#        - calendarLimits
#    NonFareCardProduct:
#      type: object
#      properties:
#        productId:
#          type: integer
#        productType:
#          $ref: '#/components/schemas/NonFarecardProductType'
#        productOwner:
#          type: integer
#        purchaseClassId:
#          type: integer
#        purchaseTypeId:
#          type: integer
#        productLabel:
#          type: array
#          items:
#            $ref: '#/components/schemas/Label'
#        salesValidityStartDate:
#          type: string
#          format: 'date-time'
#        salesValidityEndDate:
#          type: string
#          format: 'date-time'
#        ticketTypeOwner:
#          type: integer
#          nullable: true
#        ticketLabel:
#          type: array
#          nullable: true
#          items:
#            $ref: '#/components/schemas/Label'
#        durationTypeId:
#          type: integer
#          nullable: true
#        fareType:
#          $ref: '#/components/schemas/FareType'
#        zoneReferenceId:
#          type: integer
#        coefficientValue:
#          type: integer
#          nullable: true
#        isRefundable:
#          type: string
#          format: byte
#        gstTaxRateId:
#          type: integer
#        pstTaxRateId:
#          type: integer
#        paperTransferWindow:
#          type: integer
#          nullable: true
#        termsAndConditions:
#          type: string
#        officialReceipt:
#          type: string
#          format: byte
#        displayPriceOnTicket:
#          type: string
#          format: byte
#        priceIsModifiable:
#          type: string
#          format: byte
#        deviceType:
#          type: array
#          items:
#            $ref: '#/components/schemas/DeviceType'
#        allowedTransitAgencies:
#          type: array
#          items:
#            type: integer
#        paymentMeanType:
#          type: array
#          items:
#            $ref: '#/components/schemas/PaymentMeanType'
#      required:
#        - productId
#        - productType
#        - productOwner
#        - purchaseClassId
#        - purchaseTypeId
#        - productLabel
#        - salesValidityStartDate
#        - salesValidityEndDate
#        - fareType
#        - zoneReferenceId
#        - isRefundable
#        - gstTaxRateId
#        - pstTaxRateId
#        - termsAndConditions
#        - officialReceipt
#        - displayPriceOnTicket
#        - priceIsModifiable
#        - deviceType
#        - allowedTransitAgencies
#        - paymentMeanType
#    FareMatrix:
#      type: object
#      properties:
#        zoneReferenceId:
#          type: integer
#        PriceList:
#          type: array
#          items:
#            $ref: '#/components/schemas/FareMatrixPriceList'
#      required:
#        - zoneReferenceId
#        - PriceList
#    FareMatrixPriceList:
#      type: object
#      properties:
#        originZone:
#          $ref: '#/components/schemas/Zone'
#        destinationZone:
#          $ref: '#/components/schemas/Zone'
#        fare:
#          type: integer
#      required:
#        - originZone
#        - destinationZone
#        - fare
#    ServiceProvider:
#      type: object
#      properties:
#        serviceProviderId:
#          type: integer
#        serviceProviderLabel:
#          type: array
#          items:
#            $ref: '#/components/schemas/Label'
#      required:
#        - serviceProviderId
#        - serviceProviderLabel
#    ServiceProviderTopology:
#      type: object
#      properties:
#        serviceProviderId:
#          type: integer
#        route:
#          type: array
#          nullable: true
#          items:
#            $ref: '#/components/schemas/Route'
#        zone:
#          type: array
#          nullable: true
#          items:
#            $ref: '#/components/schemas/Zone'
#      required:
#        - serviceProviderId
#    Route:
#      type: object
#      properties:
#        routeId:
#          type: integer
#        gtfsRouteId:
#          type: string
#          nullable: true
#        routeNumber:
#          type: integer
#          nullable: true
#        routeLabel:
#          type: array
#          items:
#            $ref: '#/components/schemas/Label'
#        transportMode:
#          type: integer
#          nullable: true
#        trips:
#          type: array
#          nullable: true
#          items:
#            $ref: '#/components/schemas/Trip'
#        branches:
#          type: array
#          nullable: true
#          items:
#            $ref: '#/components/schemas/Branch'
#        stops:
#          type: array
#          nullable: true
#          items:
#            $ref: '#/components/schemas/Stop'
#      required:
#        - routeId
#        - routeLabel
#    Trip:
#      type: object
#      properties:
#        tripId:
#          type: integer
#        gtfsTripId:
#          type: string
#          nullable: true
#        tripLabel:
#          type: array
#          items:
#            $ref: '#/components/schemas/Label'
#        tripStops:
#          type: array
#          items:
#            $ref: '#/components/schemas/TripStop'
#      required:
#        - tripId
#        - tripLabel
#        - tripStops
#    TripStop:
#      type: object
#      properties:
#        sequenceId:
#          type: integer
#        stopId:
#          type: integer
#        arrivalTime:
#          type: string
#          format: 'date-time'
#      required:
#        - sequenceId
#        - stopId
#        - arrivalTime
#    Stop:
#      type: object
#      properties:
#        stopId:
#          type: integer
#        gtfsStopId:
#          type: string
#          nullable: true
#        stopType:
#          type: integer
#        stopLabel:
#          type: array
#          items:
#            $ref: '#/components/schemas/Label'
#        latitude:
#          type: number
#          format: double
#        longitude:
#          type: number
#          format: double
#        proximityRadius:
#          type: integer
#      required:
#        - stopId
#        - stopType
#        - stopLabel
#        - latitude
#        - longitude
#        - proximityRadius
#    Zone:
#      type: object
#      properties:
#        zoneId:
#          type: integer
#        zoneLabel:
#          type: array
#          items:
#            $ref: '#/components/schemas/Label'
#        stops:
#          type: array
#          items:
#            $ref: '#/components/schemas/Stop'
#      required:
#        - zoneId
#        - zoneLabel
#        - stops
#    Branch:
#      type: object
#      properties:
#        branchId:
#          type: integer
#        branchNumber:
#          type: string
#        branchTag:
#          type: string
#        branchLabel:
#          type: array
#          items:
#            $ref: '#/components/schemas/Label'
#        branchDirection:
#          type: string
#        stops:
#          type: array
#          items:
#            $ref: '#/components/schemas/Stop'
#      required:
#        - branchId
#        - branchNumber
#        - branchTag
#        - branchLabel
#        - branchDirection
#        - stops
#    GetDeviceSettingsOutput:
#      type: object
#      properties:
#        deviceSettings:
#          $ref: '#/components/schemas/DeviceSettings'
#      required:
#        - deviceSettings
#    GetEligibleProductListInput:
#      type: object
#      properties:
#        mediaId:
#          type: string
#        mediaProviderId:
#          type: integer
#        mediaType:
#          $ref: '#/components/schemas/MediaType'
#        serviceProviderId:
#          type: integer
#          nullable: true
#      required:
#        - mediaId
#        - mediaProviderId
#        - mediaType
#    GetEligibleProductListOutput:
#      type: object
#      properties:
#        fareCardBlocked:
#          type: boolean
#        products:
#          type: array
#          items:
#            anyOf:
#              - $ref: '#/components/schemas/EligiblePeriodPass'
#              - $ref: '#/components/schemas/EligibleEPurse'
#              - $ref: '#/components/schemas/EligibleFareMedia'
#            discriminator:
#              propertyName: productFamily
#              mapping:
#                PERIODPASS: '#/components/schemas/EligiblePeriodPass'
#                EPURSE: '#/components/schemas/EligibleEPurse'
#                FAREMEDIA: '#/components/schemas/EligibleFareMedia'
#      required:
#        - fareCardBlocked
#        - products
#    GetServiceProviderConfigurationInput:
#      type: object
#      properties:
#        serviceProviderId:
#          type: integer
#        configurationType:
#          type: array
#          items:
#            $ref: '#/components/schemas/ConfigurationType'
#      required:
#        - serviceProviderId
#        - configurationType
#    ConfigurationType:
#      type: integer
#      enum:
#        - 0
#        - 1
#        - 2
#        - 3
#        - 4
#        - 5
#        - 6
#    GetServiceProviderConfigurationOutput:
#      type: object
#      properties:
#        serviceProviderConfiguration:
#          $ref: '#/components/schemas/ServiceProviderConfiguration'
#      required:
#        - serviceProviderConfiguration
#    GetServiceProviderListOutput:
#      type: object
#      properties:
#        serviceProviderList:
#          $ref: '#/components/schemas/ServiceProvider'
#      required:
#        - serviceProviderList
#    GetTransactionHistoryInput:
#      type: object
#      properties:
#        mediaType:
#          $ref: '#/components/schemas/MediaType'
#        mediaId:
#          type: string
#      required:
#        - mediaType
#        - mediaId
#    GetTransactionHistoryOutput:
#      type: object
#      properties:
#        travelHistoryList:
#          type: array
#          items:
#            $ref: '#/components/schemas/Usage'
#      required:
#        - travelHistoryList
#    ActivateMediaInput:
#      type: object
#      properties:
#        affiliatedId:
#          type: integer
#          nullable: true
#        sellerServiceProviderId:
#          type: integer
#        deviceId:
#          type: integer
#        deviceSupplierId:
#          type: string
#          format: byte
#        eventDateTime:
#          type: string
#          format: 'date-time'
#        locationId:
#          type: integer
#        operationTsn:
#          type: integer
#        salesPeriodSn:
#          type: integer
#        spEmployeeId:
#          type: integer
#          nullable: true
#        deviceLocationId:
#          type: integer
#          nullable: true
#        deviceTsn:
#          type: integer
#        fareCardRevenueType:
#          $ref: '#/components/schemas/FareCardRevenueType'
#        fareCardValidityEndDate:
#          type: string
#          format: 'date-time'
#        fareCardVersionNumber:
#          type: string
#          format: byte
#        mediaProviderId:
#          type: integer
#          nullable: true
#        mediaType:
#          $ref: '#/components/schemas/MediaType'
#        mediaId:
#          type: string
#          format: byte
#          nullable: true
#        transactionStatus:
#          $ref: '#/components/schemas/TransactionStatusType'
#        activateFarecard:
#          type: boolean
#        totalPaymentAmount:
#          type: integer
#        paymentMeans:
#          type: array
#          nullable: true
#          items:
#            $ref: '#/components/schemas/PaymentMean'
#        classDate:
#          type: string
#          format: 'date-time'
#          nullable: true
#        concessionExpiryDate:
#          type: string
#          format: 'date-time'
#          nullable: true
#        concessionStartDate:
#          type: string
#          format: 'date-time'
#          nullable: true
#        specificClass:
#          type: integer
#          nullable: true
#        universalClass:
#          type: integer
#          nullable: true
#      required:
#        - sellerServiceProviderId
#        - deviceId
#        - deviceSupplierId
#        - eventDateTime
#        - locationId
#        - operationTsn
#        - salesPeriodSn
#        - deviceTsn
#        - fareCardRevenueType
#        - fareCardValidityEndDate
#        - fareCardVersionNumber
#        - mediaType
#        - transactionStatus
#        - activateFarecard
#        - totalPaymentAmount
#    Device:
#      type: object
#      properties:
#        deviceLocationId:
#          type: integer
#          description: "The identity of the device location within a transaction location ID.  This serves to identify the specific device at a station/stop where there are multiple devices."
#        deviceSupplierId:
#          type: integer
#          description: "The unique ID of the device supplier."
#        deviceId:
#          type: integer
#          description: "The unique ID of the device that created the transaction."
#        deviceTsn:
#          type: integer
#          description: "The transaction sequence number of the device."
#        locationId:
#          type: integer
#          description: "The ID of the stop/station at which the tap took place."
#        logicalDeviceName:
#          type: string
#          description: "Logical Name of Device."
#        eodVersionNo:
#          type: integer
#          description: "The version number of the transaction rules configuration data that was used to process the transaction."
#        operationTsn:
#          type: integer
#        spEmployeeId:
#          type: integer
#          format: int64
#          nullable: true
#        vehicleId:
#          type: integer
#          nullable: true
#          description: "The unique identifier for a transit vehicle."
#        affiliatedId:
#          type: integer
#          nullable: true
#        salesPeriodSn:
#          type: integer
#          nullable: true
#          description: "Sales Period Sequence Number for the Device."
#      required:
#        - deviceLocationId
#        - deviceSupplierId
#        - deviceId
#        - deviceTsn
#        - locationId
#        - logicalDeviceName
#        - eodVersionNo
#        - operationTsn
#    Overdraft:
#      type: object
#      properties:
#        overdraftAmount:
#          type: integer
#          description: "The amount (in cents) by which the customer overdrew his/her e-purse."
#        overdraftFee:
#          type: integer
#          description: "Represents a fee (in cents) associated with auto-clearing of a customer’s e-purse overdraft."
#        overdraftFeeTax1:
#          type: integer
#          description: "The primary tax that was applicable to an overdraft fee, specified in cents."
#        overdraftFeeTax2:
#          type: integer
#          description: "The secondary tax (in cents) calculated for the Overdraft Fee."
#      required:
#        - overdraftAmount
#        - overdraftFee
#        - overdraftFeeTax1
#        - overdraftFeeTax2
#    Pass:
#      type: object
#      properties:
#        activationStatus:
#          $ref: '#/components/schemas/PassProductActivationStatusType'
#        productId:
#          type: integer
#          description: "Product id."
#        passProductType:
#          $ref: '#/components/schemas/PassType'
#        activationDate:
#          type: string
#          format: 'date-time'
#          description: "The date the period pass becomes active."
#        expirationDate:
#          type: string
#          format: 'date-time'
#          description: "The date the period pass expires."
#        loadDeviceTsn:
#          type: integer
#          description: "Indicates the Device Sequence Number for load performed in RTA device. This will come from globally incremented DeviceTSN for RTA Device. Solution has to maintain one global DeviceTSN for RTA device."
#        loadTransactionDate:
#          type: string
#          format: 'date-time'
#          description: "The date the pass was loaded."
#        productOwnerId:
#          type: integer
#          description: "The ID of the service provider who owns (sold) the period pass."
#        productCode:
#          $ref: '#/components/schemas/PeriodPassType'
#        originZone:
#          type: integer
#          description: "The zone that serves as the center from which the ZoneRadius extends outward.  This can be used to passes to specific zones."
#        zoneRadius:
#          type: integer
#          description: "The number of zones extending outward from the OriginZone in which the pass is valid."
#        routeType:
#          type: integer
#          description: "Indicates the type of route the pass is eligible for (e.g. normal, express, etc.)."
#      required:
#        - activationStatus
#        - productId
#        - passProductType
#        - activationDate
#        - expirationDate
#        - loadDeviceTsn
#        - loadTransactionDate
#        - productOwnerId
#        - productCode
#        - originZone
#        - zoneRadius
#        - routeType
#    Inspection:
#      type: object
#      properties:
#        inspectedLine:
#          type: integer
#          format: int64
#          description: "Unique identifier of the current line during inspection."
#        inspectedZone:
#          type: integer
#          description: "For OCT, route-based travel, this is the equivalent of the TravelZoneRadius (route) on which the customer is inspected."
#        inspectionAction:
#          $ref: '#/components/schemas/InspectionActionType'
#        inspectionResult:
#          $ref: '#/components/schemas/InspectionResultType'
#      required:
#        - inspectedLine
#        - inspectedZone
#        - inspectionResult
#    FareCard:
#      type: object
#      properties:
#        fareCardType:
#          type: integer
#          description: "Indicates whether the card is a farecard or an operations card (0 = farecard, 1 = operations card)."
#        fareCardValidityEndDate:
#          type: string
#          format: 'date-time'
#          description: "End validity date of the farecard."
#        fareCardVersionNo:
#          type: integer
#          description: "Version Number of the farecard."
#        fareCardRevenueType:
#          $ref: '#/components/schemas/FareCardRevenueType'
#        fareCardOwnerId:
#          type: integer
#          description: "The ID of the service provider who owns (supplied) the card (0 – GTAFS for PRESTO or 13 – STO)."
#        visibleMediaId:
#          type: string
#          description: "The unique identifier embossed on the farecard itself."
#      required:
#        - fareCardType
#        - fareCardValidityEndDate
#        - fareCardVersionNo
#        - fareCardRevenueType
#        - fareCardOwnerId
#        - visibleMediaId
#    BlockingReasonType:
#      type: integer
#      enum:
#        - 0
#        - 1
#        - 2
#        - 3
#        - 4
#        - 5
#        - 6
#        - 7
#        - 8
#    UnblockingReasonType:
#      type: integer
#      enum:
#        - 0
#        - 1
#        - 2
#        - 3
#    ProcessOfflineTransactionInput:
#      type: object
#      properties:
#        processOfflineTransactionInput:
#          type: array
#          items:
#            $ref: '#/components/schemas/DeviceTap'
#      required:
#        - processOfflineTransactionInput